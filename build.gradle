buildscript {
  ext {
    springBootVersion = '1.5.10.RELEASE'
  }
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
}

node {
  // Version of node to use.
  version = '9.5.0'

  // Version of npm to use.
  npmVersion = '5.6.0'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true

  // Set the work directory for unpacking node
  workDir = file("${project.buildDir}/nodejs")

  // Set the work directory for NPM
  npmWorkDir = file("${project.buildDir}/npm")

  nodeModulesDir = file(project.buildDir)
}

dependencies {
  compile('org.springframework.boot:spring-boot-starter-data-mongodb')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-aop')
  compile('org.springframework.boot:spring-boot-starter-thymeleaf')
  compile("org.springframework.retry:spring-retry")

  compileOnly('org.projectlombok:lombok')

  testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyJS(type: Copy) {
  from "${project.buildDir}/resources/main/static"
  into "${project.projectDir}/src/main/resources/static"
}

copyJS.dependsOn(npmInstall, npm_run_build)
classes.dependsOn(copyJS)
